<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hjc.todolist.dao.TodoItemsMapper">
    <resultMap id="TodoItemsResultMap" type="com.hjc.todolist.entity.TodoItems">
        <id property="id" column="id"/>
        <result property="listId" column="list_id"/>
        <result property="content" column="content"/>
        <result property="createdTime" column="created_time"/>
        <result property="updatedTime" column="updated_time"/>
        <result property="deletedTime" column="deleted_time"/>
        <result property="createUser" column="create_user"/>
        <result property="updateUser" column="update_user"/>
        <result property="deleteUser" column="delete_user"/>
    </resultMap>
    <sql id="TodoItemsColumns">
        id, list_id, content, position, is_completed, created_time, updated_time, deleted_time, create_user, update_user, delete_user
    </sql>

    <select id="selectById"  resultMap="TodoItemsResultMap">
        SELECT <include refid="TodoItemsColumns" /> FROM todo_items WHERE id = #{id}
    </select>

    <select id="selectAll" resultMap="TodoItemsResultMap">
        SELECT <include refid="TodoItemsColumns" /> FROM todo_items
    </select>
    <select id="selectByIds" resultMap="TodoItemsResultMap">
        SELECT <include refid="TodoItemsColumns" />
        FROM todo_items WHERE id IN
        <foreach collection="ids" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <select id="selectByPage" parameterType="Map" resultMap="TodoItemsResultMap">
        SELECT <include refid="TodoItemsColumns" />
        FROM todo_items
        ORDER BY created_time DESC
        <if test="limit !== null and pageSize != null">
            LIMIT #{limit},#{pageSize}
        </if>
    </select>
    <select id="selectByListIds" resultMap="TodoItemsResultMap">
        SELECT <include refid="TodoItemsColumns" />
        FROM todo_items
        WHERE list_id IN
        <foreach collection="listIds" item="listId" open="(" separator="," close=")">
            #{listId}
        </foreach>
    </select>
    <select id="selectByListId" resultType="com.hjc.todolist.entity.TodoItems">
        SELECT <include refid="TodoItemsColumns" />
        FROM todo_items
        WHERE list_id = #{listId}
    </select>

    <insert id="insert" parameterType="com.hjc.todolist.entity.TodoItems" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO todo_items
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="listId != null">list_id,</if>
            <if test="content != null">content,</if>
            <if test="createdTime != null">created_time,</if>
            <if test="updatedTime != null">updated_time,</if>
            <if test="deletedTime != null">deleted_time,</if>
            <if test="createUser != null">create_user,</if>
            <if test="updateUser != null">update_user,</if>
            <if test="deleteUser != null">delete_user,</if>
        </trim>
        <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
            <if test="listId != null">#{listId},</if>
            <if test="content != null">#{content},</if>
            <if test="createdTime != null">#{createdTime},</if>
            <if test="updatedTime != null">#{updatedTime},</if>
            <if test="deletedTime != null">#{deletedTime},</if>
            <if test="createUser != null">#{createUser},</if>
            <if test="updateUser != null">#{updateUser},</if>
            <if test="deleteUser != null">#{deleteUser},</if>
        </trim>
    </insert>

    <update id="update" parameterType="com.hjc.todolist.entity.TodoItems">
        UPDATE todo_items
        <set>
            <if test="listId != null">list_id = #{listId},</if>
            <if test="content != null">content = #{content},</if>
            <if test="title != null">title = #{title},</if>
            <if test="status != null">status = #{status},</if>
            <if test="createUser != null">
                create_user = #{createUser},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser},
            </if>
            <if test="deleteUser != null">
                delete_user = #{deleteUser},
            </if>
            <if test="createdTime != null">
                created_time = #{createdTime},
            </if>
            <if test="updatedTime != null">
                updated_time = #{updatedTime},
            </if>
            <if test="deletedTime != null">
                deleted_time = #{deletedTime},
            </if>
        </set>
        WHERE id = #{id}
    </update>
    <update id="deleteById">
        UPDATE todo_items
        SET deleted_time = NOW(), delete_user = #{deletedUserId}
        WHERE id = #{id}
    </update>
</mapper>

